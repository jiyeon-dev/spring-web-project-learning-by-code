<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

    <bean id="customAccessDenied" class="org.zerock.security.CustomAccessDeniedHandler"></bean>
    <bean id="customLoginSuccess" class="org.zerock.security.CustomLoginSuccessHandler"></bean>
<!--    <bean id="customPasswordEncoder" class="org.zerock.security.CustomNoOpPasswordEncoder"></bean>-->
    <bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>

    <security:http auto-config="true" use-expressions="true">
        <security:intercept-url pattern="/sample/all" access="permitAll" />
        <security:intercept-url pattern="/sample/member" access="hasRole('ROLE_MEMBER')" />
        <security:intercept-url pattern="/sample/admin" access="hasRole('ROLE_ADMIN')" />

        <!-- 로그인 페이지 -->
<!--        <security:form-login />-->
        <security:form-login login-page="/customLogin" authentication-success-handler-ref="customLoginSuccess"/>

        <!-- 로그아웃 -->
        <security:logout logout-url="/customLogout" invalidate-session="true" />

        <!-- 접근 제한 403 -->
<!--        <security:access-denied-handler error-page="/accessError" /> -->
        <security:access-denied-handler ref="customAccessDenied" />
    </security:http>

    <security:authentication-manager>
        <security:authentication-provider>
            <security:jdbc-user-service
                    data-source-ref="dataSource"
                    users-by-username-query="SELECT userid, userpw, enabled FROM tbl_member WHERE userid = ? "
                    authorities-by-username-query="SELECT userid, auth FROM tbl_member_auth WHERE userid = ? "
            />
<!--            <security:password-encoder ref="customPasswordEncoder" />-->
            <security:password-encoder ref="bcryptPasswordEncoder" />
        </security:authentication-provider>
    </security:authentication-manager>

</beans>